// 1. Base Sticky Behavior
@use "variables" as *; 
.food-display {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(15rem, 1fr));
  gap: 1rem;
  align-items: stretch; /* ‚Üê Key property: forces equal height */
}
.sticky-header {
  position: sticky;
  top: 0;
  z-index: 100; // Ensures header stays above other content
  width: 100%;
  background-color: $tertiary;
  padding: 1rem 2rem;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  
  // Add transition for smooth effects
  transition: all 0.3s ease;
  
  &.scrolled {
    padding: 0.5rem 2rem;
    box-shadow: 0 1px 5px rgba(0, 0, 0, 0.1);
  }
}
  
  // 2. Header Layout
  //Change to grid
  .header-container {
    display: flex;
    align-items: center;
    justify-items: center;
    gap: 30px;
    padding: 1rem 2rem;
  }
  
  // 3. Logo Styles
  .logo {
    font-size: 1.5rem;
    font-weight: bold;
    text-decoration: none;
    color: #333;
  }

  .pantry-item {
    width: 15rem;
    grid-template-rows: 1fr minmax(auto, max-content);

    display: grid;
    background-color: red;
    align-items: start;
    padding: 1rem;
    border: 2px solid $quaternary;
    border-radius: 8px;
    overflow: hidden; // Keeps image corners rounded
    transition: transform 0.2s; // Hover effect
    &:hover {
      transform: translateY(-5px);
  }
  }

  .food-image-container {
    aspect-ratio: 1 / 1; // Force square container (or use 4/3)
    background: blue; // Fallback if image missing
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .food-image {
    width: 100%;
    height: 100%;
    object-fit: contain; // Fits entire image inside container (no cropping)
    // OR use `object-fit: cover` to fill container (may crop edges)
  }